
SELECT COUNT(*) FROM TRANSACTIONS;
-- THERE ARE TOTAL 109000  RECORDS 

SELECT * FROM TRANSACTIONS LIMIT 100;

-- Need how much amount we have processed each month commutative and every month.
SELECT MONTH(DATE(TRANSACTION_TIMESTAMP)) AS MNTH, SUM(TRANSACTION_AMOUNT) AS TOTAL_AMOUNT FROM TRANSACTIONS GROUP BY 1 ORDER BY 1;

-- Design a SQL query to identify the top 5 most popular products or services based on transaction counts.
SELECT MERCHANT_TYPE, COUNT(TRANSACTION_AMOUNT) AS TRANSACTION_COUNT FROM TRANSACTIONS GROUP BY 1 ORDER BY 2 DESC LIMIT 5;


-- Formulate a SQL query to visualize the daily revenue trend over time.
SELECT DATE(TRANSACTION_TIMESTAMP) AS DATE, SUM(TRANSACTION_AMOUNT) AS REVENUE FROM TRANSACTIONS GROUP BY 1 ORDER BY 1 DESC;

-- Formulate a SQL query to find the average transaction amount for each product category.
SELECT MERCHANT_TYPE, AVG(TRANSACTION_AMOUNT) AS AVG_REVENUE FROM TRANSACTIONS GROUP BY 1 ORDER BY 2 DESC;

-- Create a SQL query to analyze the transaction funnel, including completed, pending, and cancelled transactions.
 SELECT TRANSACTION_TYPE, COUNT(TRANSACTION_TYPE) FROM TRANSACTIONS GROUP BY 1 ORDER BY 2 DESC;
 -- IN THIS QUERY PURCHASE MEANS TRANSACTION COMPLETED, ACCOUNT_VERFICATION AND CASH_WITHDRAWAL MEANS PENDING AND REFUND MEANS CANCELLED
 
 -- Design a SQL query to calculate the Monthly Retention Rate, grouping users into monthly cohorts.
SELECT INITIAL_COHORT.COHORT_MONTH,
       COUNT(DISTINCT INITIAL_COHORT.USER_ID) AS TOTAL_USERS,
       COUNT(DISTINCT RETAINED_USERS.USER_ID) AS RETAINED_USERS,
       COUNT(DISTINCT RETAINED_USERS.USER_ID) / COUNT(DISTINCT INITIAL_COHORT.USER_ID) AS RETENTION_RATE
FROM (SELECT USER_ID, DATE_FORMAT(MIN(DATE(TRANSACTION_TIMESTAMP)), '%m-%d') AS COHORT_MONTH
        FROM TRANSACTIONS GROUP BY USER_ID) AS INITIAL_COHORT
LEFT JOIN 
    (SELECT USER_ID, DATE_FORMAT(MIN(DATE(TRANSACTION_TIMESTAMP)), '%m-%d') AS COHORT_MONTH
        FROM TRANSACTIONS GROUP BY USER_ID) AS RETAINED_USERS 
    ON INITIAL_COHORT.USER_ID = RETAINED_USERS.USER_ID
    AND MONTH(RETAINED_USERS.COHORT_MONTH) = MONTH(DATE_ADD(INITIAL_COHORT.COHORT_MONTH, INTERVAL 1 MONTH))
GROUP BY INITIAL_COHORT.COHORT_MONTH ORDER BY INITIAL_COHORT.COHORT_MONTH;
